apply plugin: 'com.android.application'

import org.dicio.sentences_compiler.main.SentencesCompiler
import groovy.json.JsonSlurper

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.dicio.dicio_android"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

task sentencesCompiler {
    doFirst {
        File inputDirectory = file("src/main/sentences/")
        inputDirectory.mkdirs()
        File outputDirectory = file("src/main/java/org/dicio/dicio_android/")
        outputDirectory.mkdirs()
        File outputFile = file("$outputDirectory/Sentences.java")

        List<String> arguments = new ArrayList<String>()
        File[] files = inputDirectory.listFiles()
        if (files.length == 0) {
            return
        }

        for (File file : files) {
            arguments.add("-i")
            arguments.add("UTF-8:" + file.absolutePath)
        }
        arguments.add("-o")
        arguments.add("UTF-8:" + outputFile.absolutePath)

        arguments.add("java")
        arguments.add("--package")
        arguments.add("\"org.dicio.dicio_android\"")
        arguments.add("--class")
        arguments.add("\"Sentences\"")

        SentencesCompiler sentencesCompiler = new SentencesCompiler()
        sentencesCompiler.main((String[])arguments.toArray())
    }
}
preBuild.dependsOn(sentencesCompiler)

task apiKeysGenerator {
    doFirst {
        File keysFilename = file("src/main/api_keys.json")
        File outputDirectory = file("src/main/java/org/dicio/dicio_android/")
        outputDirectory.mkdirs()
        File outputFilename = file("$outputDirectory/ApiKeys.java")

        OutputStreamWriter outputFile = new OutputStreamWriter(new FileOutputStream(outputFilename))
        def json = new JsonSlurper().parseText(keysFilename.text)

        outputFile.write("/*\n" +
                " * FILE AUTO-GENERATED BY GRADLE TASK apiKeysGenerator FROM src/main/api_keys.json.\n" +
                " * DO NOT MODIFY THIS FILE BUT EDIT src/main/api_keys.json INSTEAD.\n" +
                " */\n\n" +
                "package org.dicio.dicio_android;\npublic class ApiKeys {\n");

        json.each { k, v ->
            outputFile.write("public static final String ")
            outputFile.write(k)
            outputFile.write(" = \"")
            outputFile.write(v)
            outputFile.write("\";\n")
        }
        outputFile.write("}\n")

        outputFile.close()
    }
}
preBuild.dependsOn(apiKeysGenerator)


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.1'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.github.Stypox:dicio-assistance-component:edfb6c6fd073fd8b7617206ee113d4a7e9a3eade'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'com.microsoft.cognitiveservices.speech:client-sdk:1.6.0'
    implementation 'org.unbescape:unbescape:1.1.6.RELEASE'
    implementation 'org.jsoup:jsoup:1.13.1'
}

package org.dicio.skill.chain

import androidx.annotation.CallSuper
import org.dicio.skill.Skill
import org.dicio.skill.SkillComponent
import org.dicio.skill.util.CleanableUp
import org.dicio.skill.util.NextSkills

/**
 * Hosts platform-specific code to produce platform-specific output based on the data obtained from
 * the previous step. Do here all platform-specific things (e.g file accessing,
 * preference handling, etc.).
 * @param FromType the type of the data generated by the previous step
 */
abstract class OutputGenerator<FromType> : SkillComponent(), NextSkills, CleanableUp {
    // no next skills by default
    private var nextSkills: List<Skill> = listOf()

    /**
     * Generates output to speak or to show to the user based on the data calculated in the previous
     * steps. Do here calculations that require access to platform-specific APIs, such as looking
     * for an app on the user's device.
     *
     * @param data the data to use to generate output, from the previous step
     */
    abstract fun generate(data: FromType)

    /**
     * @see NextSkills.nextSkills
     */
    override fun nextSkills(): List<Skill> {
        val skills = nextSkills
        nextSkills = listOf()
        return skills
    }

    /**
     * @see NextSkills.setNextSkills
     */
    override fun setNextSkills(skills: List<Skill>) {
        nextSkills = skills
    }

    /**
     * Resets the last list of next skills passed to [.setNextSkills] to an empty list.
     * Remember to call super if you override.
     * @see CleanableUp.cleanup
     */
    @CallSuper
    override fun cleanup() {
        nextSkills = listOf()
    }
}

package org.dicio.skill.chain;

import org.dicio.skill.Skill;
import org.dicio.skill.SkillComponent;
import org.dicio.skill.util.CleanableUp;

import java.util.Collections;
import java.util.List;

/**
 * Hosts platform-specific code to produce platform-specific output based on the data obtained from
 * the previous step. Do here all platform-specific things (e.g file accessing,
 * preference handling, etc.).
 * @param <FromType> the type of the data generated by the previous step
 */
public abstract class OutputGenerator<FromType> extends SkillComponent implements CleanableUp {

    /**
     * Generates output to speak or to show to the user based on the data calculated in the previous
     * steps. Do here calculations that require access to platform-specific APIs, such as looking
     * for an app on the user's device.
     *
     * @param data the data to use to generate output, from the previous step
     */
    public abstract void generate(FromType data);

    /**
     * @return a list of skills to use for the next user input. This is needed to allow providing a
     *         stateful interaction with a set of skills. If the list is empty, and it is by
     *         default, the current stateful conversation is interrupted. This function will be
     *         called after {@link #generate(Object)}, so that the calculated data can be used to
     *         choose what to do.
     */
    public List<Skill> nextSkills() {
        // no next skills by default
        return Collections.emptyList();
    }
}
